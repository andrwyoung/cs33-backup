Assuming 64 bit machine (inferred by the %r__ commands)

A. 
e1.p: 0
e1.y: 8
e2.x: 0
e2.next: 8

B. ele requires 16 bytes in total
C. up->e2.x = *(up->e2.next->e1.p) - (up->e2.next->e1.y)

movq	8(%rdi), %rax 	:up->e2.next
movq	(%rax), %rdx	
movq	(%rdx), %rdx	:up->e2.next->e1.p
subq	8(%rax), %rdx	:subtracts up->e2.next->e1.y
movq	%rdx, (%rdi)	:assign final value to e2.x
ret